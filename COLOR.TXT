CSS supports a waide variety of colors. These include named colors, along with colors described by a numeric value.
Colors in CSS can be described in three ways:
    $ Named colors- English words that describe colors, also called keyword colors.
    $ RGB - numeric value that describe a mix of red, green and blue.
    $ HSL - numeric value that describe a mix of hue, saturation, and lightness.

FOREGROUN vs BACKGROUND COLORS:
    # Color can affect the following design aspects:
        $ The foreground colors
        $ The background color
    Foregrund colors: Color that an element appears in.
    Background colors: color that change the background.
    In CSS these two design aspects can be styled with the following two properties;
        $ color- this property styles an element's foreground color.
        $ background - color: this property styles the background of an element.

HEXADECIMAL:
    One syntax that we can use to specify colors is called hexadecimal. Colors specified using this system of colors are called hex colors.
    A hex color begins with an hash(#) character, which is followed by three or six characters. The character represents the value for red, blue and green.
    Black : #000000 or #000
    White : #FFFFFF or #FFF
    Aqua :  #00FFFF or #0FF
    Black, white and aqua are all represented with both three characters and six characters. This can be done with hex colors whose number pairs are the same character.
RGB COLORS: 
    Ther is another syntax for representing RGB values that uses decimal numbers.
    syntax :   color:rgb( 23 , 15 , 48);
    Here, each of the three values represents a color component, and each can have a decimal number value from 0 to 255.
    The first number represents the amount of red, the second is green and the third is blue.
HSL:
    The syntax for HSL is similar to the decimal form of RGB, though it differs in important ways.
    The first number represents the degree of the hue, and can be between 0 and 360. The second and third numbers are percentages representing saturation and lightness respectively.
    example : color: hsl(120, 60%, 70%);
    Hue is the first numbers and refers to an angle on a color wheel. Red is 0 degree, Green is 120 degree, Blue is 240 degree.
    Saturation refers to the intensity or purity of the color. The saturation decreases towards 0% and increase towards 100%.
    Lightness refers to how light or dark the color is. Halfway, or 50% is normal lightness. Increasing lightness towards 100% makes the color lighter and decreasing it towards 0% makes the color darker.
    HSL is convenient for adjusting colors. HSL is also useful for  making a set of colors that work well together by selecting various colors that have the same lightness and saturation but different hues.
OPACITY AND ALPHA:
    When we overlap two opaque elemets, nothing from the bottom element shows through the top element.
    To use opacity in the HSL color scheme, use hsla instead of hsl, and four values instead of three. The fourth value is the alpha. This last value is sometimes called opacity.
    Alpha is a decimal number from zero to one. If alpha is zero, the color will be completely transparent. If alpha is one, the color will be completely opaque.
    One can think of the alpha value as the amount of the background to mix with the foreground.
    When a color's alpha is below one, any color behind it will be blended in. The blending happens for each pixel; no blurring occurs.
    The RGB color scheme has a similar syntax for opacity, rgba. Again, the first three values work the same as rgb and the last value is the alpha.
    Alpha can only be used with the HSL and RGB colors.
    There is however, a named color keyword for zero opacity, transparent. it's equivalent to rgba(0, 0, 0, 0). color : transparent;